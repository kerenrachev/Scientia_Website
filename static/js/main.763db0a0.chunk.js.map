{"version":3,"sources":["logo.svg","pages/GamePage.js","components/NavigationBar.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","GamePage","unityProvider","useUnityContext","loaderUrl","dataUrl","frameworkUrl","codeUrl","react_default","a","createElement","react","distribution_exports","matchWebGLToCanvasSize","style","width","NavigationBar","_useState","useState","undefined","_useState2","Object","slicedToArray","walletAddress","setWalletAddress","className","background","position","Navbar","bg","expand","direction","Container","fluid","Brand","href","type","onClick","event","preventDefault","window","ethereum","request","method","then","addressResult","value","Toggle","aria-controls","Offcanvas","id","aria-labelledby","placement","Header","closeButton","Title","Body","Nav","Link","NavDropdown","title","Item","Divider","App","document","getElementsByClassName","components_NavigationBar","pages_GamePage","Component","reportWebVitals","onPerfEntry","Function","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.763db0a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import { Unity, useUnityContext } from \"react-unity-webgl\";\r\nimport React, { Fragment } from \"react\";\r\n\r\n\r\n\r\n\r\n\r\nfunction GamePage() {\r\n    const { unityProvider } = useUnityContext({\r\n        loaderUrl: \"unitybuild/UnityWebGL.loader.js\",\r\n        dataUrl: \"unitybuild/UnityWebGL.data\",\r\n        frameworkUrl: \"unitybuild/UnityWebGL.framework.js\",\r\n        codeUrl: \"unitybuild/UnityWebGL.wasm\",\r\n        \r\n    });\r\n\r\n   \r\n\r\n    return (\r\n\r\n        <Fragment>\r\n           \r\n            <Unity unityProvider={unityProvider} matchWebGLToCanvasSize={true} style={{ width: \"100%\" }} />\r\n           \r\n        </Fragment>\r\n\r\n    );\r\n}\r\n\r\nexport default GamePage;\r\n","\r\nimport React, { useState } from \"react\";\r\nimport { Navbar, Container, Offcanvas, Nav, NavDropdown, Form, FormControl, Button } from 'react-bootstrap'\r\n\r\nfunction NavigationBar() {\r\n\r\n\r\n    const [walletAddress, setWalletAddress] = useState(undefined)\r\n\r\n    function loadBlockchainData(event){\r\n        event.preventDefault()\r\n        if (window.ethereum) {\r\n            window.ethereum.request({ method: 'eth_requestAccounts' }).then(addressResult => {\r\n                setWalletAddress(addressResult[0])\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n  return (\r\n\r\n    <div className='app_nabar' style={{ background: \"rgba(255, 255, 255, 0.4)\" , position: \"fixed\", width: \"100%\"}}>\r\n          <Navbar bg=\"light\" expand={false} style={{ direction: \"rtl\" }} >\r\n            <Container fluid >\r\n              <Navbar.Brand href=\"#\">\r\n            {!walletAddress?<input type=\"button\" onClick={loadBlockchainData} value=\"Conenct Wallet\"/>: walletAddress}\r\n              \r\n\r\n              </Navbar.Brand>\r\n              <Navbar.Toggle aria-controls=\"offcanvasNavbar\" />\r\n              <Navbar.Offcanvas\r\n                id=\"offcanvasNavbar\"\r\n                aria-labelledby=\"offcanvasNavbarLabel\"\r\n                placement=\"start\"\r\n                \r\n              >\r\n                <Offcanvas.Header closeButton>\r\n                  <Offcanvas.Title id=\"offcanvasNavbarLabel\">Options</Offcanvas.Title>\r\n                </Offcanvas.Header>\r\n                <Offcanvas.Body>\r\n                  <Nav className=\"justify-content-end flex-grow-1 pe-3\">\r\n                    <Nav.Link href=\"home\">Home</Nav.Link>\r\n                    <Nav.Link href=\"map\">Map</Nav.Link>\r\n                    <Nav.Link href=\"market\">Marketplace</Nav.Link>\r\n                    <NavDropdown title=\"Market\" id=\"offcanvasNavbarDropdown\">\r\n                      <NavDropdown.Item href=\"#action3\">Lands</NavDropdown.Item>\r\n                      <NavDropdown.Item href=\"#action4\">Chairs</NavDropdown.Item>\r\n                      <NavDropdown.Divider />\r\n                      <NavDropdown.Item href=\"#action5\">\r\n                        Contact\r\n                      </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                  </Nav>\r\n\r\n                </Offcanvas.Body>\r\n              </Navbar.Offcanvas>\r\n            </Container>\r\n          </Navbar>\r\n\r\n\r\n        </div>\r\n\r\n  );\r\n}\r\n\r\nexport default NavigationBar;\r\n","import logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport React, { Component } from 'react';\nimport GamePage from './pages/GamePage';\nimport NavigationBar from './components/NavigationBar';\n\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    // Making the Boostrap nav-bar Transparent\n    document.getElementsByClassName(\"navbar navbar-light bg-light\")[0].className = \"navbar navbar-light\"\n  }\n\n  render() {\n    return (\n\n      <div className=\"App\">\n        <NavigationBar/>\n\n\n\n        <GamePage></GamePage>\n\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}